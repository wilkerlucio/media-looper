{:config-paths ["com.wsscode/pathom3"]
 :lint-as      {clojure.test.check.clojure-test/defspec      clojure.core/def
                clojure.test.check.properties/for-all        clojure.core/let
                com.fulcrologic.fulcro.components/defsc      clojure.core/defn
                com.fulcrologic.fulcro.mutations/defmutation clj-kondo.lint-as/def-catch-all
                com.fulcrologic.guardrails.core/>def         clojure.spec.alpha/def
                com.fulcrologic.guardrails.core/>defn        clojure.core/defn
                com.wsscode.pathom.viz.embed.macros/defc     clojure.core/defn
                com.wsscode.promesa.macros/clet              clojure.core/let
                helix.core/defnc                             clojure.core/defn
                nubank.workspaces.core/defcard               clojure.core/def
                nubank.workspaces.core/deftest               clojure.core/def
                potemkin.collections/def-map-type            clojure.core/deftype
                promesa.core/let                             clojure.core/let
                promesa.core/loop                            clojure.core/loop}
 :linters      {:invalid-arity       {:level :error}
                :missing-else-branch {:level :off}
                :private-call        {:level :off}
                :unresolved-symbol   {:exclude [match? thrown-match?]}
                :consistent-alias    {:level   :warning
                                      :aliases {com.wsscode.async.processing  wap
                                                clojure.test.check.generators gen
                                                clojure.test.check.properties prop}}
                :unused-namespace    {:level   :warning
                                      :exclude [com.fulcrologic.guardrails.core
                                                com.wsscode.async.async-clj
                                                com.wsscode.async.async-cljs
                                                promesa.core]}
                :unused-referred-var {:level   :warning
                                      :exclude {com.wsscode.async.async-clj     [let-chan let-chan*
                                                                                 go go-catch go-promise
                                                                                 <! <? <?maybe <!maybe <!!]
                                                com.wsscode.async.async-cljs    [let-chan let-chan* <!p
                                                                                 go go-catch go-promise
                                                                                 <! <? <?maybe <!maybe]
                                                com.fulcrologic.guardrails.core [>def >defn >fdef => | <- ?]
                                                clojure.test                    [deftest is are run-tests testing]
                                                cljs.test                       [deftest is are run-tests testing]}}}}
